name: Develop Branch CI

on:
  push:
    branches:
      - develop
    tags:
      - [0-9]+.**
      - v[0-9]+.**

jobs:

  test:
    name: CI Testing
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fetch all branches
        run: |
          git fetch --prune --unshallow --tags
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Decode google-services.json
        env:
          FIREBASE_JSON_ARIZONA: ${{ secrets.FIREBASE_JSON_ARIZONA }}
          FIREBASE_JSON_MAIN: ${{ secrets.FIREBASE_JSON_MAIN }}
          FIREBASE_JSON_FAKE: ${{ secrets.FIREBASE_JSON_FAKE}}
        run: |
          mkdir -p app/src/calibrationArizona
          echo $FIREBASE_JSON_ARIZONA > app/src/calibrationArizona/google-services.json
          echo $FIREBASE_JSON_MAIN > app/src/calibrationGlobal/google-services.json
          echo $FIREBASE_JSON_FAKE > app/src/production/google-services.json
      - name: Decode debug.keystore
        env:
          DEBUG_KEYSTORE: ${{ secrets.DEBUG_KEYSTORE }}
        run: echo "$DEBUG_KEYSTORE" | base64 --decode > debug.keystore
      - name: Clean, Build
        run: bash ./gradlew clean assemble -PVERIFICATION_API_KEY=$VERIFICATION_API_KEY -PSERVER_VERIFICATION_ENDPOINT=$SERVER_VERIFICATION_ENDPOINT -PSERVER_UPLOAD_ENDPOINT=$SERVER_UPLOAD_ENDPOINT -PSERVER_DOWNLOAD_ENDPOINT=$SERVER_DOWNLOAD_ENDPOINT --stacktrace
      - name: Lint
        run: bash ./gradlew lint -PVERIFICATION_API_KEY=$VERIFICATION_API_KEY -PSERVER_VERIFICATION_ENDPOINT=$SERVER_VERIFICATION_ENDPOINT -PSERVER_UPLOAD_ENDPOINT=$SERVER_UPLOAD_ENDPOINT -PSERVER_DOWNLOAD_ENDPOINT=$SERVER_DOWNLOAD_ENDPOINT
      - name: Test
        run: bash ./gradlew app:test -Pcoverage -PVERIFICATION_API_KEY=$VERIFICATION_API_KEY -PSERVER_VERIFICATION_ENDPOINT=$SERVER_VERIFICATION_ENDPOINT -PSERVER_UPLOAD_ENDPOINT=$SERVER_UPLOAD_ENDPOINT -PSERVER_DOWNLOAD_ENDPOINT=$SERVER_DOWNLOAD_ENDPOINT
      - name: Update SonarQube
        env:
          LOGIN_KEY: ${{ secrets.SONARCLOUD_LOGIN_KEY }}
          PR_BRANCH: github.event.pull_request.head.ref
        run: bash ./gradlew sonarqube -Dsonar.login=$LOGIN_KEY -Dsonar.branch.name=develop -PVERIFICATION_API_KEY=$VERIFICATION_API_KEY -PSERVER_VERIFICATION_ENDPOINT=$SERVER_VERIFICATION_ENDPOINT -PSERVER_UPLOAD_ENDPOINT=$SERVER_UPLOAD_ENDPOINT -PSERVER_DOWNLOAD_ENDPOINT=$SERVER_DOWNLOAD_ENDPOINT --stacktrace
  apk:
    name: Generate APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
        with:
          submodules: 'recursive'
      - name: Fetch tags
        run: git fetch --prune --unshallow --tags
      - name: set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Decode google-services.json
        env:
          FIREBASE_JSON_ARIZONA: ${{ secrets.FIREBASE_JSON_ARIZONA }}
          FIREBASE_JSON_MAIN: ${{ secrets.FIREBASE_JSON_MAIN }}
          FIREBASE_JSON_FAKE: ${{ secrets.FIREBASE_JSON_FAKE}}
        run: |
          mkdir -p app/src/calibrationArizona
          echo $FIREBASE_JSON_ARIZONA > app/src/calibrationArizona/google-services.json
          echo $FIREBASE_JSON_MAIN > app/src/calibrationGlobal/google-services.json
          echo $FIREBASE_JSON_FAKE > app/src/production/google-services.json
      - name: Decode debug.keystore
        env:
          DEBUG_KEYSTORE: ${{ secrets.DEBUG_KEYSTORE }}
        run: echo "$DEBUG_KEYSTORE" | base64 --decode > debug.keystore
      - name: Build debug APK
        run: bash ./gradlew assembleProductionArizonaDebug -PVERIFICATION_API_KEY=$VERIFICATION_API_KEY -PSERVER_VERIFICATION_ENDPOINT=$SERVER_VERIFICATION_ENDPOINT -PSERVER_UPLOAD_ENDPOINT=$SERVER_UPLOAD_ENDPOINT -PSERVER_DOWNLOAD_ENDPOINT=$SERVER_DOWNLOAD_ENDPOINT --stacktrace
      - name: Upload APK
        uses: actions/upload-artifact@v1
        with:
          name: app
          path: app/build/outputs/apk/productionArizona/debug/app-production-arizona-debug.apk
      - name: Upload APK to Data Theorem
        env:
          DT_UPLOAD_API_KEY: ${{ secrets.DATA_THEOREM_API_UPLOAD_KEY }}
          SIGNED_BINARY_PATH: app/build/outputs/apk/productionArizona/debug/app-production-arizona-debug.apk
        run: ./ci-scripts/datatheorem-upload.sh